###################################################
#
#   The buildtools repository is at:
#   https://github.com/foo123/Beeld
#
###################################################

settings ={}
    Xpresion = "Xpresion::"
    RegExp = "RegExp::"
@
    
plugins =[{}]
    # include 'minify' plugin from plugins folder
    "minify" = "!plg:minify"
#    # include 'doc' plugin from plugins folder
#    "doc" = "!plg:doc"
@

tasks =[{}]
    
    build_core =[{}]
        
        src =[]

            !tpl:umd-header-deps.tpl.js  # include a umd-header template
            
            # core classes (should be included always)
            ./src/FILTER.js
            ./src/core/Filter.js
            ./src/core/Util.js
            
            # needed interpolation routines
            ./src/interpolation/bilinear.js
            #./src/interpolation/nearest.js
            #./src/interpolation/bicubic.js
            
            ./src/core/Color.js
            ./src/core/Canvas.js
            ./src/core/Image.js
            ./src/core/IO.js
            
            ./src/fx/perlin.js # if needed for generating PerlinNoise images
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/FILTER.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@MODULE@@" = "FILTER"
            "@@DEPS@@"  = "Classy,Asynchronous"
            
        @

        out = ./build/filter.core.js
        
    @
    
    build_io =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # io classes
            ./src/io/header.js
            ./src/util/xhr.js
            ./src/io/XHRLoader.js
            ./src/io/BinaryReader.js
            ./src/io/BinaryWriter.js
            ./src/io/HTMLImageLoader.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/io/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_IO"
            "@@MODULE@@" = "FILTER"
            
        @


        out = ./build/filter.io.js
        
    @
    
    build_codecs =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # (extra) (native) image codecs for various image formats
            ./src/codecs/header.js
            ./src/util/zlib.js # needed by PNG decoder
            ./src/codecs/PNG.js
            ./src/codecs/JPG.js
            ./src/codecs/BMP.js
            ./src/codecs/GIF.js
            ./src/codecs/TGA.js
            ./src/codecs/RGBE.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/codecs/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_CODECS"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.codecs.js
        
    @
    
    build_interpolation =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # (extra) interpolation routines
            ./src/interpolation/header.js
            ./src/interpolation/nearest.js
            ./src/interpolation/bicubic.js
            #./src/interpolation/biquadric.js # TODO
            #./src/interpolation/lanczos.js # TODO
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/interpolation/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_INTERPOLATION"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.interpolation.js
        
    @
    
    build_transform =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # data transforms (fft, etc..) (todo)
            ./src/transforms/header.js
            ./src/transforms/fft.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/transforms/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_TRANSFORMS"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.transform.js
        
    @
    
    build_ml =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # machine learning, classification, clustering, etc.. (in progress)
            ./src/ml/header.js
            ./src/ml/cc.js
            ./src/ml/kmeans.js
            #./src/ml/da.js
            #./src/ml/em.js
            #./src/ml/svd.js
            #./src/ml/jade.js
            #./src/ml/camshift.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/ml/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_ML
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.ml.js
        
    @
    
    build_filters =[{}]
        
        src =[]

            # FILTER generic filters
            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            ./src/filters/header.js
            ./src/filters/CompositeFilter.js
            ./src/filters/AlgebraicFilter.js
            ./src/filters/BlendFilter.js
            ./src/filters/ColorTableFilter.js
            ./src/filters/ColorMatrixFilter.js
            ./src/filters/ColorMapFilter.js
            ./src/filters/AffineMatrixFilter.js
            ./src/filters/DisplacementMapFilter.js
            ./src/filters/GeometricMapFilter.js
            ./src/filters/ConvolutionMatrixFilter.js
            ./src/filters/MorphologicalFilter.js
            ./src/filters/StatisticalFilter.js
            ./src/filters/InlineFilter.js
            ./src/filters/ResampleFilter.js
            ./src/filters/SelectionFilter.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/filters/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_FILTERS"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.filters.js
        
    @
    
    build_plugins =[{}]
        
        src =[]

            # sample FILTER Plugins
            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            ./src/plugins/header.js
            ./src/plugins/Noise.js
            ./src/plugins/PerlinNoise.js
            ./src/plugins/Gradient.js
            ./src/plugins/ChannelCopy.js
            ./src/plugins/Equalize.js # Intensity Equalize, Gray Equalize, RGB Equalize
            ./src/plugins/Pixelate.js # Rectangular Pixelate, Triangular Pixelate, Hexagonal Pixelate
            ./src/plugins/Halftone.js
            ./src/plugins/DropShadow.js
            ./src/plugins/Bokeh.js
            ./src/plugins/SeamlessTile.js
            ./src/plugins/FloodFill.js # FloodFill and PatternFill
            ./src/plugins/CannyEdges.js
            ./src/plugins/HaarDetector.js
            ./src/plugins/ConnectedComponents.js
            #./src/plugins/ColorDetector.js (TODO)
            #./src/plugins/ActiveShape.js (TODO)
            #./src/plugins/LipContourExtractor.js (TODO)
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/plugins/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_PLUGINS"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.plugins.js
        
    @
    
    build_glsl =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # glsl (webgl/node-gl) generic Filters (in progress)
            ./src/glsl/header.js
            ./src/glsl/Filter.js
            ./src/glsl/ColorTableFilter.js
            ./src/glsl/ColorMatrixFilter.js
            ./src/glsl/ColorMapFilter.js
            ./src/glsl/AffineMatrixFilter.js
            ./src/glsl/GeometricMapFilter.js
            ./src/glsl/DisplacementMapFilter.js
            ./src/glsl/ConvolutionMatrixFilter.js
            ./src/glsl/InlineFilter.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/glsl/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_GLSL"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.glsl.js
        
    @
    
    build_svg =[{}]
        
        src =[]

            !tpl:umd-header-plugin.tpl.js  # include a umd-header template
            
            # svg and css based generic Filters (TODO)
            ./src/svg/header.js
            ./src/svg/Filter.js
            
            !tpl:umd-footer.tpl.js  # include a umd-footer template

        @

        # extract header from this file
        header = ./src/svg/header.js

        # Text replacements
        replace =[{}]
            
            "@@ROOT@@" = "this"
            "@@VERSION@@" = "0.9.6"
            "@@DATE@@" = Xpresion::date("Y-m-d H:i:s")
            "@@PLUGIN@@" = "FILTER_SVG"
            "@@MODULE@@" = "FILTER"
            
        @

        out = ./build/filter.svg.js
        
    @
    
    minify_core =[{}]
        
        src =[]
            ./build/filter.core.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.core.min.js
    @
    
    minify_interpolation =[{}]
        
        src =[]
            ./build/filter.interpolation.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.interpolation.min.js
    @
    
    minify_transform =[{}]
        
        src =[]
            ./build/filter.transform.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.transform.min.js
    @
    
    minify_ml =[{}]
        
        src =[]
            ./build/filter.ml.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.ml.min.js
    @
    
    minify_io =[{}]
        
        src =[]
            ./build/filter.io.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.io.min.js
    @
    
    minify_codecs =[{}]
        
        src =[]
            ./build/filter.codecs.js
        @

        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.codecs.min.js
    @
    
    minify_filters =[{}]
        
        src =[]
            ./build/filter.filters.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.filters.min.js
    @
    
    minify_plugins =[{}]
        
        src =[]
            ./build/filter.plugins.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.plugins.min.js
    @
    
    minify_glsl =[{}]
        
        src =[]
            ./build/filter.glsl.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.glsl.min.js
    @
    
    minify_svg =[{}]
        
        src =[]
            ./build/filter.svg.js
        @


        minify ={}
            uglifyjs =[]
                -m -c
        @@

        out = ./build/filter.svg.min.js
    @
    
    bundle =[{}]
        
        bundle =[]
            ./build/classy.js
            ./build/asynchronous.js
            ./build/filter.core.min.js
            #./build/filter.interpolation.min.js
            #./build/filter.transform.min.js
            ./build/filter.ml.min.js
            ./build/filter.io.min.js
            ./build/filter.codecs.min.js
            ./build/filter.filters.min.js
            #./build/filter.glsl.min.js
            #./build/filter.svg.min.js
            ./build/filter.plugins.min.js
        @

        out = ./build/filter.bundle.js
    @
    
    bundle_src =[{}]
        
        bundle =[]
            ./build/classy.js
            ./build/asynchronous.js
            ./build/filter.core.js
            #./build/filter.interpolation.js
            #./build/filter.transform.js
            ./build/filter.ml.js
            ./build/filter.io.js
            ./build/filter.codecs.js
            ./build/filter.filters.js
            #./build/filter.glsl.js
            #./build/filter.svg.js
            ./build/filter.plugins.js
        @

        out = ./build/filter.bundle.js
    @

@
